# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.

jobs:
  do_build:
    docker:
      #- image: 'circleci/openjdk:11.0.8-jdk'
      - image: 'adoptopenjdk/openjdk11'
       #working_directory: ~/build
    steps:
      - run: cat /etc/*release #get Linux release, in this case it's Ubuntu
      #Create Ant Dir
      - run: mkdir -p /opt/ant/

      # these two commands to update package repository
      - run: apt-get update
      - run: apt-get upgrade -qy
      # install wget packages
      - run: apt-get install wget

      #Download
      - run: wget http://downloads.apache.org//ant/binaries/apache-ant-1.10.9-bin.tar.gz -P /opt/ant
      #Unpack Ant
      - run: tar -xvzf /opt/ant/apache-ant-1.10.9-bin.tar.gz -C /opt/ant/
      # Remove tar file
      - run: rm -f /opt/ant/apache-ant-1.10.9-bin.tar.gz

      - checkout
      - run: pwd -P
      # push environmental variables to Bash environment so visible across all run statements
      - run: echo "export ANT_HOME=/opt/ant/apache-ant-1.10.9" >> $BASH_ENV
      - run: echo "export PATH=$PATH:$ANT_HOME/bin" >> $BASH_ENV
      #- run: echo $PATH
      - run: javac src/xpertek/security/*.java -d bin
      - run: cd build && ant 
      - run: cd deploy && java -cp SFIPwHash.jar xpertek.security.SFIPwHash myTopSecretPwd
      - run: cd ../src/test && ant
      - store_test_results:
          path: ~/testreport/ 


# Orchestrate or schedule a set of jobs
workflows:
  create_jar:
    # Run the welcome/run job in its own container
    jobs:
      - do_build